library(golem)
golem::install_dev_deps()
install.packages('pak')
install.packages('pak')
install.packages('pak')
install.packages("pak", repos = sprintf("https://r-lib.github.io/p/pak/stable/%s/%s/%s", .Platform$pkgType, R.Version()$os, R.Version()$arch))
golem::install_dev_deps()
golem::install_dev_deps()
golem::install_dev_deps()
install.packages('gert')
library('pak')
golem::install_dev_deps()
remotes::install_github("ThinkR-open/dockerfiler")
golem::install_dev_deps()
#' Run the Shiny Application
#'
#' @param ... arguments to pass to golem_opts.
#' See `?golem::get_golem_options` for more details.
#' @inheritParams shiny::shinyApp
#'
#' @export
#' @importFrom shiny shinyApp
#' @importFrom golem with_golem_options
run_app <- function(
onStart = NULL,
options = list(),
enableBookmarking = NULL,
uiPattern = "/",
...
) {
with_golem_options(
app = shinyApp(
ui = app_ui,
server = app_server,
onStart = onStart,
options = options,
enableBookmarking = enableBookmarking,
uiPattern = uiPattern
),
golem_opts = list(...)
)
}
shinyApp(run_app())
shiny::shinyApp(run_app())
run_app()
library(golem)
run_app()
library(shiny)
run_app()
#' The application server-side
#'
#' @param input,output,session Internal parameters for {shiny}.
#'     DO NOT REMOVE.
#' @import shiny
#' @noRd
app_server <- function(input, output, session) {
# Your application server logic
}
#' Access files in the current app
#'
#' NOTE: If you manually change your package name in the DESCRIPTION,
#' don't forget to change it here too, and in the config file.
#' For a safer name change mechanism, use the `golem::set_golem_name()` function.
#'
#' @param ... character vectors, specifying subdirectory and file(s)
#' within your package. The default, none, returns the root of the app.
#'
#' @noRd
app_sys <- function(...) {
system.file(..., package = "orbitofrontalALS")
}
#' The application User-Interface
#'
#' @param request Internal parameter for `{shiny}`.
#'     DO NOT REMOVE.
#' @import shiny
#' @noRd
app_ui <- function(request) {
tagList(
# Leave this function for adding external resources
golem_add_external_resources(),
# Your application UI logic
fluidPage(
h1("orbitofrontalALS")
)
)
}
run_app()
run_app()
library(golem)
#' Add external Resources to the Application
#'
#' This function is internally used to add external
#' resources inside the Shiny application.
#'
#' @import shiny
#' @importFrom golem add_resource_path activate_js favicon bundle_resources
#' @noRd
golem_add_external_resources <- function() {
add_resource_path(
"www",
app_sys("app/www")
)
tags$head(
favicon(),
bundle_resources(
path = app_sys("app/www"),
app_title = "orbitofrontalALS"
)
# Add here other external resources
# for example, you can add shinyalert::useShinyalert()
)
}
run_app()
golem::fill_desc(author_first_name = 'Raghav', author_last_name = 'Sharma', author_email = 'raghavv.sharma@mail.utoronto.ca', repo_url = 'https://github.com/Raghav1881/orbitofrontalALS')
golem::fill_desc(pkg_name = 'orbitofrontalALS', author_first_name = 'Raghav', author_last_name = 'Sharma', author_email = 'raghavv.sharma@mail.utoronto.ca', repo_url = 'https://github.com/Raghav1881/orbitofrontalALS')
golem::fill_desc(pkg_name = 'orbitofrontalALS', pkg_title = '{shiny} app for McKeever et al. paper on ALS/FTLD in human orbitofrontal cortex', author_first_name = 'Raghav', author_last_name = 'Sharma', author_email = 'raghavv.sharma@mail.utoronto.ca', repo_url = 'https://github.com/Raghav1881/orbitofrontalALS')
golem::fill_desc(pkg_name = 'orbitofrontalALS', pkg_title = '{shiny} app for McKeever et al. paper on ALS/FTLD in human orbitofrontal cortex.', pkg_description = 'FILL LATER', author_first_name = 'Raghav', author_last_name = 'Sharma', author_email = 'raghavv.sharma@mail.utoronto.ca', repo_url = 'https://github.com/Raghav1881/orbitofrontalALS')
run_app()
run_app()
usethis::use_package("seurat")
usethis::use_package("Seurat")
usethis::use_package("Signac")
attachment::att_amend_desc()
usethis::use_package("Signac")
usethis::use_package("ggplot2")
usethis::use_package("Signac")
usethis::use_package("Seurat")
usethis::use_package("plotly")
attachment::att_amend_desc()
rm(list = c("run_app"))
attachment::att_amend_desc()
load_all()
attachment::att_from_rscripts()
usethis::use_dev_package('Seurat')
usethis::use_dev_package('Signac')
usethis::use_dev_package('ggplot2')
usethis::use_dev_package('plotly')
